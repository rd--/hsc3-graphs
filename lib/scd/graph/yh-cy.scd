// https://github.com/pangrus/hachi/blob/master/lib/engine_hachi.sc ; yh (yoshinosuke horiuchi)
var decay = 2;
var amp = 10;
var pan = 0;
var tone = 0.002;
var tr = Impulse.kr(LFNoise2.kr(1) * 0.25 + 0.35, 0);
var env1 = Env.perc(0.3, decay, 1, -3).kr(0, tr);
var env2 = Env.new([0, 0.6, 0], [0.1, decay * 0.7], -5).kr(0, tr);
var env2b = Env.new([0, 0.3, 0], [0.1, decay * 20], -120).kr(0, tr);
var env3 = Env.new([0, 1, 0], [0, decay * 5], -150).kr(0, tr);
var osc1 = LFPulse.ar(203.52) * 0.6;
var osc2 = LFPulse.ar(366.31) * 0.6;
var osc3 = LFPulse.ar(301.77) * 0.6;
var osc4 = LFPulse.ar(518.19) * 0.6;
var osc5 = LFPulse.ar(811.16) * 0.6;
var osc6 = LFPulse.ar(538.75) * 0.6;
var sig = osc1 + osc2 + osc3 + osc4 + osc5 + osc6;
var sig1, sig2, sig2a, sig2b, sig3;
sig1 = BLowShelf.ar(sig, 2000, 1, 5);
sig1 = BPF.ar(sig1, 3000);
sig1 = BPeakEQ.ar(sig1, 2400, 0.5, 5);
sig1 = BHiPass.ar(sig1, 1550, 0.7);
sig1 = LPF.ar(sig1, 3000);
sig1 = BLowShelf.ar(sig1, 1000, 1, 0);
sig1 = sig1 * env1 * tone;
sig2 = BLowShelf.ar(sig, 990, 2, -5);
sig2 = BPF.ar(sig2, 7400);
sig2 = BPeakEQ.ar(sig2, 7200, 0.5, 5);
sig2 = BHiPass4.ar(sig2, 6800, 0.7);
sig2 = BHiShelf.ar(sig2, 10000, 1, -4);
sig2a = sig2 * env2 * 0.3;
sig2b = sig2 * env2b * 0.6;
sig3 = BLowShelf.ar(sig, 990, 2, -15);
sig3 = BPF.ar(sig3, 6500);
sig3 = BPeakEQ.ar(sig3, 7400, 0.35, 10);
sig3 = BHiPass4.ar(sig3, 10500, 0.8) * 2;
sig3 = sig3 * env3;
Pan2.ar(LPF.ar(sig1 + sig2a + sig2b + sig3, 4000), pan, amp);
